// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TimelineScreen /> renders correctly 1`] = `
<RNCSafeAreaView
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessible={false}
  edges={
    {
      "bottom": "additive",
      "left": "additive",
      "right": "additive",
      "top": "additive",
    }
  }
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    className="p-4"
  >
    <TextInput
      autoFocus={true}
      className="mb-4 font-cp"
      multiline={true}
      onChangeText={[Function]}
      onSelectionChange={[Function]}
      placeholder="Start writing..."
      selection={
        {
          "end": 0,
          "start": 0,
        }
      }
      selectionColor="#6b7280"
    />
    <View
      collapsable={false}
      jestAnimatedStyle={
        {
          "value": {
            "display": "none",
            "opacity": 0,
          },
        }
      }
      style={
        {
          "display": "none",
          "opacity": 0,
        }
      }
    >
      <View
        className="w-full flex-row justify-between"
      >
        <View
          className="flex-row rounded-full border border-gray-700"
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
          >
            <Text />
          </View>
          <View
            className="h-full w-px bg-gray-700"
          />
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
          >
            <Text />
          </View>
          <View
            className="h-full w-px bg-gray-700"
          />
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
          >
            <Text />
          </View>
        </View>
        <View
          collapsable={false}
          jestAnimatedStyle={
            {
              "value": {
                "display": "none",
                "opacity": 0,
              },
            }
          }
          style={
            {
              "display": "none",
              "opacity": 0,
            }
          }
        >
          <ActivityIndicator
            color="#374151"
            size="small"
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaView>
`;
